// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Check Routes component rendering 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-iCfMLu MLgwW"
      >
        <div
          class="sc-furwcr iaCmTI"
        >
          <header
            class="sc-pVTFL iexhUs"
          >
            <p>
              Mocked Nav component
            </p>
            <div
              class="sc-dkPtRN kJKXEJ"
            >
              <svg
                class="sc-bdvvtL fSQoBZ"
                theme="light"
              >
                icon-sun.svg
              </svg>
              <div
                class="sc-hKwDye irbxoN"
              >
                <input
                  aria-label="Переключить между тёмной и светлой темой"
                  class="sc-eCImPb hxUlRI"
                  id="theme-switch-toggle"
                  name="theme"
                  type="checkbox"
                />
                <label
                  aria-hidden="true"
                  class="sc-jRQBWg kmpWMq"
                  color="1"
                  for="theme-switch-toggle"
                />
                <div
                  aria-hidden="true"
                  class="sc-gKclnd gJGqmM"
                  color="1"
                />
              </div>
              <svg
                class="sc-gsDKAQ hnBhTn"
                theme="light"
              >
                icon-moon.svg
              </svg>
            </div>
          </header>
          <main>
            <p>
              Mocked Routes component
            </p>
          </main>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-iCfMLu MLgwW"
    >
      <div
        class="sc-furwcr iaCmTI"
      >
        <header
          class="sc-pVTFL iexhUs"
        >
          <p>
            Mocked Nav component
          </p>
          <div
            class="sc-dkPtRN kJKXEJ"
          >
            <svg
              class="sc-bdvvtL fSQoBZ"
              theme="light"
            >
              icon-sun.svg
            </svg>
            <div
              class="sc-hKwDye irbxoN"
            >
              <input
                aria-label="Переключить между тёмной и светлой темой"
                class="sc-eCImPb hxUlRI"
                id="theme-switch-toggle"
                name="theme"
                type="checkbox"
              />
              <label
                aria-hidden="true"
                class="sc-jRQBWg kmpWMq"
                color="1"
                for="theme-switch-toggle"
              />
              <div
                aria-hidden="true"
                class="sc-gKclnd gJGqmM"
                color="1"
              />
            </div>
            <svg
              class="sc-gsDKAQ hnBhTn"
              theme="light"
            >
              icon-moon.svg
            </svg>
          </div>
        </header>
        <main>
          <p>
            Mocked Routes component
          </p>
        </main>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
